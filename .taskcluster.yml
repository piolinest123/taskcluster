---
version: 1
reporting: checks-v1
policy:
    pullRequests: public
tasks:
    - $let:
          taskgraph:
              branch: taskgraph
              revision: cab4565345d0d0effa66f18fe91335dd6d744031
          trustDomain: taskcluster
      in:
          $let:
              # We set some of these directly in tc because we don't have some mozilla-specific concepts
              ownerEmail: taskcluster-internal@mozilla.com
              level: 1

              # Github events have this stuff in different places...
              baseRepoUrl:
                  $if: 'tasks_for in ["github-push", "github-release"]'
                  then: '${event.repository.html_url}'
                  else:
                      $if: 'tasks_for == "github-pull-request"'
                      then: '${event.pull_request.base.repo.html_url}'
                      else:
                          $if: 'tasks_for in ["cron", "action"]'
                          then: '${repository.url}'
              repoUrl:
                  $if: 'tasks_for in ["github-push", "github-release"]'
                  then: '${event.repository.html_url}'
                  else:
                      $if: 'tasks_for == "github-pull-request"'
                      then: '${event.pull_request.head.repo.html_url}'
                      else:
                          $if: 'tasks_for in ["cron", "action"]'
                          then: '${repository.url}'
              project:
                  $if: 'tasks_for in ["github-push", "github-release"]'
                  then: '${event.repository.name}'
                  else:
                      $if: 'tasks_for == "github-pull-request"'
                      then: '${event.pull_request.head.repo.name}'
                      else:
                          $if: 'tasks_for in ["cron", "action"]'
                          then: '${repository.project}'
              head_branch:
                  $if: 'tasks_for == "github-pull-request"'
                  then: ${event.pull_request.head.ref}
                  else:
                      $if: 'tasks_for == "github-push"'
                      then: ${event.ref}
                      else:
                          $if: 'tasks_for == "github-release"'
                          then: '${event.release.target_commitish}'
                          else:
                              $if: 'tasks_for in ["cron", "action"]'
                              then: '${push.branch}'
              head_sha:
                  $if: 'tasks_for == "github-push"'
                  then: '${event.after}'
                  else:
                      $if: 'tasks_for == "github-pull-request"'
                      then: '${event.pull_request.head.sha}'
                      else:
                          $if: 'tasks_for == "github-release"'
                          then: '${event.release.tag_name}'
                          else:
                              $if: 'tasks_for in ["cron", "action"]'
                              then: '${push.revision}'
              head_tag:
                  $if: 'tasks_for == "github-release"'
                  then: '${event.release.tag_name}'
                  else: ''

              ownTaskId:
                  $if: '"github" in tasks_for'
                  then: {$eval: as_slugid("decision_task")}
                  else:
                      $if: 'tasks_for == "cron"'
                      then: '${ownTaskId}'

              pullRequestAction:
                  $if: 'tasks_for == "github-pull-request"'
                  then: ${event.action}
                  else: 'UNDEFINED'

              releaseAction:
                  $if: 'tasks_for == "github-release"'
                  then: ${event.action}
                  else: 'UNDEFINED'
          in:
              $if: >
                tasks_for in ["action", "cron"]
                || (tasks_for == "github-pull-request" && pullRequestAction in ["opened", "reopened", "synchronize"])
                || (tasks_for == "github-push" && event["ref"] == "refs/heads/master")
                || (tasks_for == "github-release" && releaseAction == "published")
              then:
                  schedulerId: taskcluster-level-${level}
                  taskId: '${ownTaskId}'
                  taskGroupId:
                      $if: 'tasks_for == "action"'
                      then:
                          '${action.taskGroupId}'
                      else:
                          '${ownTaskId}'  # same as taskId; this is how automation identifies a decision task
                  created: {$fromNow: ''}
                  deadline: {$fromNow: '1 day'}
                  expires: {$fromNow: '1 year 1 second'}  # 1 second so artifacts expire first, despite rounding errors
                  metadata:
                      $merge:
                          - owner: "${ownerEmail}"
                            source: '${repoUrl}/raw/${head_sha}/.taskcluster.yml'
                          - $if: 'tasks_for in ["github-push", "github-pull-request", "github-release"]'
                            then:
                                name: "Decision Task"
                                description: 'The task that creates all of the other tasks in the task graph'
                            else:
                                $if: 'tasks_for == "action"'
                                then:
                                    name: "Action: ${action.title}"
                                    description: '${action.description}'
                                else:
                                    name: "Decision Task for cron job ${cron.job_name}"
                                    description: 'Created by a [cron task](https://community-tc.services.mozilla.com/tasks/${cron.task_id})'
                  provisionerId: "proj-taskcluster"
                  workerType: "ci"
                  tags:
                      $if: 'tasks_for in ["github-push", "github-pull-request"]'
                      then:
                          kind: decision-task
                      else:
                          $if: 'tasks_for == "action"'
                          then:
                              kind: 'action-callback'
                          else:
                              $if: 'tasks_for == "cron"'
                              then:
                                  kind: cron-task
                  scopes:
                      # `https://` is 8 characters so, ${repoUrl[8:]} is the repository without the protocol.
                      $if: 'tasks_for == "github-push"'
                      then:
                          $let:
                              short_head_branch:
                                  $if: 'head_branch[:11] == "refs/heads/"'
                                  then: {$eval: 'head_branch[11:]'}
                                  else: ${head_branch}
                          in:
                              - 'assume:repo:${repoUrl[8:]}:branch:${short_head_branch}'
                      else:
                          $if: 'tasks_for == "github-pull-request"'
                          then:
                              - 'assume:repo:github.com/${event.pull_request.base.repo.full_name}:pull-request'
                          else:
                              $if: 'tasks_for == "github-release"'
                              then:
                                  - 'assume:repo:${repoUrl[8:]}:release'
                              else:
                                  $if: 'tasks_for == "action"'
                                  then:
                                      # when all actions are hooks, we can calculate this directly rather than using a variable
                                      - '${action.repo_scope}'
                                  else:
                                      - 'assume:repo:${repoUrl[8:]}:cron:${cron.job_name}'

                  requires: all-completed
                  priority: lowest
                  retries: 5

                  payload:
                      env:
                          # run-task uses these to check out the source; the inputs
                          # to `mach taskgraph decision` are all on the command line.
                          $merge:
                              - TASKCLUSTER_BASE_REPOSITORY: '${baseRepoUrl}'
                                TASKCLUSTER_HEAD_REPOSITORY: '${repoUrl}'
                                TASKCLUSTER_HEAD_REF: '${head_branch}'
                                TASKCLUSTER_HEAD_REV: '${head_sha}'
                                TASKCLUSTER_HEAD_TAG: '${head_tag}'
                                TASKCLUSTER_REPOSITORY_TYPE: git
                                TASKGRAPH_BASE_REPOSITORY: https://hg.mozilla.org/ci/taskgraph
                                TASKGRAPH_HEAD_REPOSITORY: https://hg.mozilla.org/ci/${taskgraph.branch}
                                TASKGRAPH_HEAD_REV: ${taskgraph.revision}
                                TASKGRAPH_REPOSITORY_TYPE: hg
                                REPOSITORIES: {$json: {taskcluster: "taskcluster", taskgraph: "Taskgraph"}}
                                HG_STORE_PATH: /builds/worker/checkouts/hg-store
                              - $if: 'tasks_for in ["github-pull-request"]'
                                then:
                                    TASKCLUSTER_PULL_REQUEST_NUMBER: '${event.pull_request.number}'
                              - $if: 'tasks_for == "action"'
                                then:
                                    ACTION_TASK_GROUP_ID: '${action.taskGroupId}'  # taskGroupId of the target task
                                    ACTION_TASK_ID: {$json: {$eval: 'taskId'}}  # taskId of the target task (JSON-encoded)
                                    ACTION_INPUT: {$json: {$eval: 'input'}}
                                    ACTION_CALLBACK: '${action.cb_name}'
                      features:
                          taskclusterProxy: true
                      # Note: This task is built server side without the context or tooling that
                      # exist in tree so we must hard code the hash
                      image:
                          mozillareleases/taskgraph:decision-21bef1bc0f11e62c7a23384584f9f8f0d96e95eef192e5bb599fc82ba55c81a7

                      maxRunTime: 1800

                      command:
                          - /usr/local/bin/run-task
                          - '--taskcluster-checkout=/builds/worker/checkouts/src'
                          - '--taskgraph-checkout=/builds/worker/checkouts/taskgraph'
                          - '--task-cwd=/builds/worker/checkouts/src'
                          - '--'
                          - bash
                          - -cx
                          - $let:
                                extraArgs: {$if: 'tasks_for == "cron"', then: '${cron.quoted_args}', else: ''}
                            in:
                                $if: 'tasks_for == "action"'
                                then: >
                                    cd /builds/worker/checkouts/src &&
                                    ln -s /builds/worker/artifacts artifacts &&
                                    taskgraph action-callback
                                else: >
                                    PIP_IGNORE_INSTALLED=0 pip install --user /builds/worker/checkouts/taskgraph &&
                                    PIP_IGNORE_INSTALLED=0 pip install --user arrow taskcluster pyyaml &&
                                    ln -s /builds/worker/artifacts artifacts &&
                                    ~/.local/bin/taskgraph decision
                                    --pushlog-id='0'
                                    --pushdate='0'
                                    --project='${project}'
                                    --message=""
                                    --owner='${ownerEmail}'
                                    --level='${level}'
                                    --base-repository="$TASKCLUSTER_BASE_REPOSITORY"
                                    --head-repository="$TASKCLUSTER_HEAD_REPOSITORY"
                                    --head-ref="$TASKCLUSTER_HEAD_REF"
                                    --head-rev="$TASKCLUSTER_HEAD_REV"
                                    --head-tag="$TASKCLUSTER_HEAD_TAG"
                                    --repository-type="$TASKCLUSTER_REPOSITORY_TYPE"
                                    --tasks-for='${tasks_for}'
                                    ${extraArgs}

                      artifacts:
                          'public':
                              type: 'directory'
                              path: '/builds/worker/artifacts'
                              expires: {$fromNow: '1 year'}

                  extra:
                      $merge:
                          - $if: 'tasks_for == "action"'
                            then:
                                parent: '${action.taskGroupId}'
                                action:
                                    name: '${action.name}'
                                    context:
                                        taskGroupId: '${action.taskGroupId}'
                                        taskId: {$eval: 'taskId'}
                                        input: {$eval: 'input'}
                          - $if: 'tasks_for == "cron"'
                            then:
                                cron: {$json: {$eval: 'cron'}}
                          - tasks_for: '${tasks_for}'
